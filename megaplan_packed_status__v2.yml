openapi: 3.0.0
info:
  version: "2"
  title: "MegaplanPackedStatus"
  description: Update statuses in pickup and bag was_packed transactions by track number
servers:
  - url: http://megaplan-crm/openapi/MegaplanPackedStatus/v2
tags:
  - name: WasPackedStatus
paths:
  /pickup:
    put:
      tags:
        - WasPackedStatus
      summary: 'Update pickup was packed status'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickupStatus'
      responses:
        "200":
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickupResult'
        "500":
          description: 'Some internal error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
  /bag/wasPacked:
    put:
      tags:
        - WasPackedStatus
      summary: 'Update bag packed status'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BagStatus'
      responses:
        "200":
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BagResult'
        "500":
          description: 'Some internal error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
components:
  schemas:
    ErrorResult:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"
      description: "Message field is not required"
    Message:
      type: object
      properties:
        level:
          type: string
          enum:
            - emergency
            - alert
            - critical
            - error
            - warning
            - notice
            - info
        type:
          type: string
          enum:
            - UNDEFINED
            - INVALID_RESPONSE
          description: >
            UNDEFINED - Any undefined message type
            INVALID_RESPONSE - A message generated by the client stating that the response could not be decoded
        text:
          type: string
          description: Message, that describes what went wrong
    SuccessResult:
      allOf:
        - $ref: '#/components/schemas/ErrorResult'
      type: object
      properties:
        data:
          type: object
    PickupResult:
      allOf:
        - $ref: '#/components/schemas/SuccessResult'
      type: object
      properties:
        data:
          $ref: '#/components/schemas/StatuseResponse'
    BagResult:
      allOf:
        - $ref: '#/components/schemas/SuccessResult'
      type: object
      properties:
        data:
          $ref: '#/components/schemas/StatuseResponse'
    ## Resources
    StatuseResponse:
      type: object
      properties:
        dealId:
          type: string
    PickupStatus:
      type: object
      required:
        - trackNumber
        - wasPacked
      properties:
        trackNumber:
          type: string
          description: tracknumber from shipping labels datastore
        wasPacked:
          type: boolean
          description: Update was packed status message
        problemDescription:
          type: string
          description: was packed problem description
    BagStatus:
      type: object
      required:
        - supplierName
        - orderNumber
      properties:
        supplierName:
          type: string
          description: supplierName from shipping labels datastore
          enum:
            - RollunOffice
            - RockyMountain
            - Autodist
            - Wps
            - Slt
            - Partzilla
            - RockyMountainRetail
            - TuckerRocky
            - PartsUnlimited
            - other
        orderNumber:
          type: string
          description: orderNumber