openapi: 3.0.0
info:
  version: "1"
  title: "FetchLinks"
  description: Manifest description
servers:
  - url: http://server-host/openapi/FetchLinks/v1
tags:
  - name: FetchLinks
paths:
  "/FetchLinks":
    post:
      tags:
        - FetchLinks
      summary: "Get links"
      description: ""
      requestBody:
        description: ""
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinksPostRequest'
      responses:
        "200":
          description: "Order successfully created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinksResult'
        "500":
          description: 'Some internal error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
components:
  schemas:
    # Basic results components
    ErrorResult:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"
      description: "Message field is not required"
    Message:
      type: object
      properties:
        level:
          type: string
          enum:
            - emergency
            - alert
            - critical
            - error
            - warning
            - notice
            - info
        type:
          type: string
          enum:
            - UNDEFINED
            - LOGGER_MESSAGE
          description: >
            You can expose this enum for all your errors
            UNDEFINED - Any undefined message type
            LOGGER_MESSAGE - Same as undefined
        text:
          type: string
          description: Message, that describes what went wrong
    SuccessResult:
      allOf:
        - $ref: '#/components/schemas/ErrorResult'
      type: object
      properties:
        data:
          type: object

    ## One resource result
    LinksResult:
      allOf:
        - $ref: '#/components/schemas/SuccessResult'
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Links'

    ## Result with list of resource
    ResourceListResult:
      allOf:
        - $ref: '#/components/schemas/SuccessResult'
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Links'

    ## Body for post request
    LinksPostRequest:
      type: object
      required:
        - rids
      properties:
        rids:
          type: array
          description: array of rids
          items: 
            type: string
            example: 'RID01'
        datastore:
          type: string
          example: 'AmazonInventory'

    ## Resource object
    Links:
      type: object
      properties:
        rids:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/Link'
    
    Link:
      type: object
      properties:
        rid: 
          type: string
          example: "RID01"
        links:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/LinkItem'
          
    LinkItem:
      type: object
      required: 
        - link
      properties:
        link:
          type: string
          example: 'example.com/4214'
        name:
          type: string
          example: 'link name'





